import streamlit as st
import pandas as pd
import ast  # Para convertir strings en listas de Python

# Cargar el dataset
df = pd.read_csv("tmdb_5000_movies.csv")

# Funci√≥n para extraer los nombres de los g√©neros
def extract_genre_names(genre_str):
    try:
        genres = ast.literal_eval(genre_str)  # Convierte el string en lista de diccionarios
        return [genre['name'] for genre in genres]  # Extrae los nombres
    except (ValueError, SyntaxError):
        return []  # En caso de error, devuelve una lista vac√≠a

# Extraer y limpiar nombres de g√©neros eliminando NaN
all_genres = df['genres'].dropna().apply(extract_genre_names).explode().dropna().unique()

# Convertir a lista y eliminar posibles valores no string
all_genres = [genre for genre in all_genres if isinstance(genre, str)]

# Agregar una opci√≥n vac√≠a al inicio
all_genres.insert(0, "Selecciona un g√©nero")

# Encabezado estilo marquesina de cine
st.markdown("<h1 style='text-align: center; color: red;'>üé¨ Movie Recommendations üé¨</h1>", unsafe_allow_html=True)

# Seleccionar g√©nero con la opci√≥n vac√≠a
genre = st.selectbox("üçø", all_genres, index=0)

# Funci√≥n para obtener pel√≠culas por g√©nero
def get_movies_by_genre(genre):
    filtered_movies = df[df['genres'].apply(lambda x: genre in extract_genre_names(x))]
    return filtered_movies[['title']]

# Mostrar pel√≠culas solo si se ha seleccionado un g√©nero v√°lido
if genre != "Selecciona un g√©nero":
    movies = get_movies_by_genre(genre)
    st.write(f"### Pel√≠culas de {genre}")
    movie_titles = movies['title'].tolist()
    if movie_titles:
        for title in movie_titles:
            st.write(f"- {title}")
    else:
        st.write("No hay pel√≠culas disponibles para este g√©nero.")
